name: Python CI Pipeline

on:
  push:
    branches: [master, main, docker, elisaa, ci-pipeline]
  pull_request:
    branches: [master, main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -r requirements.txt
          pip install pylint pytest black flake8
      - name: Run Linters
        run: |
          # Run pylint
          pylint app/
          # Run flake8
          flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics || true
          # Run black in check mode
          black --check app/ || true
      - name: Run Tests
        run: |
          python -m pytest tests/

  docker-build-and-test:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: |
          docker build -t fastapi-app .
      - name: Run Docker container
        run: |
          docker run -d -p 8000:8000 --name fastapi-backend fastapi-app
          sleep 10  # Give container time to start
      - name: Check if container is running
        run: |
          if docker ps | grep fastapi-backend; then
            echo "Container is running successfully"
          else
            echo "Container failed to start"
            exit 1
          fi
      - name: Test API endpoint
        run: |
          curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/docs | grep 200
      - name: Print Success Message
        run: |
          echo "CI Pipeline completed successfully!"
          echo "========================"
          echo "✓ Code checked out"
          echo "✓ Python environment set up"
          echo "✓ Dependencies installed"
          echo "✓ Tests executed"
          echo "✓ Linting completed"
          echo "✓ Docker image built and tested"
          echo "========================"
